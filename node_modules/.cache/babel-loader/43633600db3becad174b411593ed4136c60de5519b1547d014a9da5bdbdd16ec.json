{"ast":null,"code":"var _jsxFileName = \"/Users/sani/Desktop/Heckaton/frontend/src/Components/Owner.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport api from '../api/api';\nimport './Owner.css';\nimport YouTube from \"react-youtube\";\nimport Pin from '../asset/pin1.png';\nimport Me from '../asset/Me.png';\nimport { FaUserGear } from \"react-icons/fa6\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Owner() {\n  _s();\n  const options = {\n    width: \"300\",\n    height: \"200\",\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  const [playlists, setPlaylists] = useState([]);\n  const [newPlaylistTitle, setNewPlaylistTitle] = useState('');\n  const [pinNumber, setPinNumber] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 플레이리스트를 가져오는 함수\n  useEffect(() => {\n    api.get('/api/playlists').then(response => {\n      setPlaylists(response.data);\n    }).catch(error => {\n      console.error('플레이리스트를 불러오는 중 오류 발생:', error);\n    });\n  }, []);\n\n  // 새로운 플레이리스트를 생성하는 함수\n  const createPlaylist = () => {\n    const newPlaylist = {\n      title: `[PIN] ${newPlaylistTitle}`,\n      description: 'description',\n      status: 'public'\n    };\n    api.post('/api/playlists', newPlaylist).then(response => {\n      setPlaylists([...playlists, response.data]);\n      setNewPlaylistTitle(''); // 입력 필드 초기화\n      navigate('/OwnerPlaylist');\n    }).catch(error => {\n      console.error('플레이리스트 생성 중 오류 발생:', error);\n    });\n  };\n  const navigate = useNavigate();\n  const handleInputChange = event => {\n    setPinNumber(event.target.value);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      console.log(\"Searching for PIN:\", pinNumber);\n    }\n  };\n  const handleIconClick = () => {\n    navigate('/OwnerPlaylist');\n  };\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n    setEditedName(profileName); // 편집 시 기존 이름으로 초기화\n  };\n  const handleSave = () => {\n    setProfileName(editedName);\n    setIsEditing(false);\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: [\"SoundP\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pinLogoContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pinLogo\",\n            src: Pin,\n            alt: \"pinLogo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), \"n\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        placeholder: \"Search using Pin...\",\n        value: pinNumber,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaUserGear, {\n        style: {\n          fontSize: '30px',\n          cursor: 'pointer'\n        },\n        onClick: handleIconClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile-image\",\n        src: Me,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile-name\",\n          children: \"\\uC0B0\\uC774\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bio\",\n          children: \"\\uAE30\\uBD84 \\uC804\\uD658\\uC744 \\uC704\\uD55C \\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-container\",\n      children: [playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-card\",\n        children: [playlist.videoId ? /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: playlist.videoId,\n          opts: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-icon\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"playlist-title\",\n          children: playlist.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playlist-description\",\n          children: playlist.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-card add-card\",\n        onClick: createPlaylist,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-icon\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Owner, \"pn+F8wAe+/3pzV+GH7+VuIAQCCI=\", false, function () {\n  return [useNavigate];\n});\n_c = Owner;\nexport default Owner;\nvar _c;\n$RefreshReg$(_c, \"Owner\");","map":{"version":3,"names":["useEffect","useState","api","YouTube","Pin","Me","FaUserGear","useNavigate","jsxDEV","_jsxDEV","Owner","_s","options","width","height","playerVars","autoplay","playlists","setPlaylists","newPlaylistTitle","setNewPlaylistTitle","pinNumber","setPinNumber","isEditing","setIsEditing","get","then","response","data","catch","error","console","createPlaylist","newPlaylist","title","description","status","post","navigate","handleInputChange","event","target","value","handleKeyDown","key","log","handleIconClick","toggleEdit","setEditedName","profileName","handleSave","setProfileName","editedName","handleCancel","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","style","fontSize","cursor","onClick","map","playlist","index","videoId","opts","_c","$RefreshReg$"],"sources":["/Users/sani/Desktop/Heckaton/frontend/src/Components/Owner.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport api from '../api/api';\nimport './Owner.css';\nimport YouTube from \"react-youtube\";\nimport Pin from '../asset/pin1.png';\nimport Me from '../asset/Me.png';\nimport { FaUserGear } from \"react-icons/fa6\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Owner() {\n  const options = {\n    width: \"300\",\n    height: \"200\",\n    playerVars: {\n      autoplay: 0,\n    },\n  };\n\n  const [playlists, setPlaylists] = useState([]);\n  const [newPlaylistTitle, setNewPlaylistTitle] = useState('');\n  const [pinNumber, setPinNumber] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  // 플레이리스트를 가져오는 함수\n  useEffect(() => {\n    api.get('/api/playlists')\n      .then(response => {\n        setPlaylists(response.data);\n      })\n      .catch(error => {\n        console.error('플레이리스트를 불러오는 중 오류 발생:', error);\n      });\n  }, []);\n\n  // 새로운 플레이리스트를 생성하는 함수\n  const createPlaylist = () => {\n    const newPlaylist = {\n      title: `[PIN] ${newPlaylistTitle}`,\n      description: 'description',\n      status: 'public'\n    };\n    api.post('/api/playlists', newPlaylist)\n      .then(response => {\n        setPlaylists([...playlists, response.data]);\n        setNewPlaylistTitle(''); // 입력 필드 초기화\n        navigate('/OwnerPlaylist');\n      })\n      .catch(error => {\n        console.error('플레이리스트 생성 중 오류 발생:', error);\n      });\n  };\n\n  const navigate = useNavigate();\n\n  const handleInputChange = (event) => {\n    setPinNumber(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      console.log(\"Searching for PIN:\", pinNumber);\n    }\n  };\n\n  const handleIconClick = () => {\n    navigate('/OwnerPlaylist');\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n    setEditedName(profileName); // 편집 시 기존 이름으로 초기화\n  };\n  \n  const handleSave = () => {\n    setProfileName(editedName);\n    setIsEditing(false);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n\n\n\n  return (\n    <div className=\"Header\">\n      <div className=\"header-container\">\n        <h1 className=\"logo\">\n          SoundP<span className=\"pinLogoContainer\"><img className=\"pinLogo\" src={Pin} alt=\"pinLogo\" /></span>n\n        </h1>\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          placeholder=\"Search using Pin...\"\n          value={pinNumber}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        />\n        <FaUserGear style={{ fontSize: '30px', cursor: 'pointer' }} onClick={handleIconClick} />\n      </div>\n\n      <div className=\"profile-container\">\n        <img className=\"profile-image\" src={Me} alt=\"Profile\" />\n        <div className=\"profile-details\">\n          <h2 className=\"profile-name\">산이</h2>\n          <p className=\"bio\">\n            기분 전환을 위한 플레이리스트 \n          </p>\n        </div>\n      </div>\n\n      <div className=\"playlist-container\">\n        {playlists.map((playlist, index) => (\n          <div className=\"playlist-card\" key={index}>\n            {playlist.videoId ? (\n              <YouTube videoId={playlist.videoId} opts={options} />\n            ) : (\n              <div className=\"add-icon\">+</div>\n            )}\n            <h3 className=\"playlist-title\">{playlist.title}</h3>\n            <p className=\"playlist-description\">{playlist.description}</p>\n          </div>\n        ))}\n        \n        <div className=\"playlist-card add-card\" onClick={createPlaylist}>\n          <div className=\"add-icon\">+</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Owner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}