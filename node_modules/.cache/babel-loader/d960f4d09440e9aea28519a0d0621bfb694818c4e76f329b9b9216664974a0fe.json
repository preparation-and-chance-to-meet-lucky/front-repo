{"ast":null,"code":"var _jsxFileName = \"/Users/sani/Desktop/Heckaton/frontend/src/components/OwnerPage/OwnerPlaylist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './OwnerPlaylist.css';\nimport './Owner.css';\nimport api from '../../api/api';\nimport Pin from '../../asset/pin1.png';\nimport { FaUserGear, FaRegCirclePlay } from \"react-icons/fa6\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OwnerPlaylist() {\n  _s();\n  const [pinNumber, setPinNumber] = useState('');\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isProfileEditing, setIsProfileEditing] = useState(false);\n  const [profileName, setProfileName] = useState('사용자 이름');\n  const [playlist, setPlaylist] = useState({\n    title: '',\n    id: '',\n    isEditable: false\n  });\n  const [editedTitle, setEditedTitle] = useState('');\n  const songs = [{\n    id: 1,\n    title: '아 진짜 너무 졸리다',\n    artist: '이지은 망명',\n    likes: 1500\n  }, {\n    id: 2,\n    title: '피곤해용 힘들어요',\n    artist: '이지은 영혼',\n    likes: 2\n  }, {\n    id: 3,\n    title: '리액트 못하겠어요',\n    artist: '박은산 영혼',\n    likes: 20000\n  }\n  // ... 추가 노래 데이터\n  ];\n\n  // 플레이리스트 데이터를 API로부터 가져오는 함수\n  useEffect(() => {\n    api.get('/api/playlists').then(response => {\n      const fetchedPlaylist = response.data[0]; // 첫 번째 플레이리스트를 가져온다고 가정\n      setPlaylist({\n        title: fetchedPlaylist.title,\n        id: fetchedPlaylist.id,\n        isEditable: fetchedPlaylist.isEditable\n      });\n      setEditedTitle(fetchedPlaylist.title);\n    }).catch(error => {\n      console.error('플레이리스트 로드 중 오류:', error);\n    });\n  }, []);\n\n  // 플레이리스트 제목을 업데이트하는 함수\n  const updatePlaylistTitle = () => {\n    api.put(`/api/playlists/youtube/${playlist.id}`, {\n      title: editedTitle\n    }).then(response => {\n      setIsEditing(false);\n      setPlaylist(prev => ({\n        ...prev,\n        title: editedTitle\n      }));\n      console.log('플레이리스트 업데이트 완료:', response.data);\n    }).catch(error => {\n      console.error('플레이리스트 제목 업데이트 중 오류 발생:', error);\n    });\n  };\n\n  // 플레이리스트의 수정 가능 여부를 변경하는 함수\n  const toggleEditability = () => {\n    api.patch(`/api/playlists/modify/${playlist.id}`, {\n      isEditable: !playlist.isEditable\n    }).then(response => {\n      setPlaylist(prev => ({\n        ...prev,\n        isEditable: !prev.isEditable\n      }));\n      console.log('플레이리스트 수정 가능 상태 변경:', response.data);\n    }).catch(error => {\n      console.error('수정 가능 상태 변경 중 오류 발생:', error);\n    });\n  };\n  const handleInputChange = e => {\n    setPinNumber(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      console.log(`Searching for Pin: ${pinNumber}`);\n    }\n  };\n  const handleSongSelection = id => {\n    if (selectedSongs.includes(id)) {\n      setSelectedSongs(selectedSongs.filter(songId => songId !== id));\n    } else {\n      setSelectedSongs([...selectedSongs, id]);\n    }\n  };\n  const handleSelectAll = () => {\n    if (selectedSongs.length === songs.length) {\n      setSelectedSongs([]);\n    } else {\n      setSelectedSongs(songs.map(song => song.id));\n    }\n  };\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleSave = () => {\n    updatePlaylistTitle();\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    setEditedTitle(playlist.title);\n  };\n  const toggleProfileEdit = () => {\n    setIsProfileEditing(!isProfileEditing);\n  };\n  const handleProfileSave = () => {\n    console.log('Saved profile name:', profileName);\n    toggleProfileEdit();\n  };\n  const handleProfileCancel = () => {\n    setProfileName('사용자 이름');\n    toggleProfileEdit();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: [\"SoundP\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pinLogoContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pinLogo\",\n            src: Pin,\n            alt: \"pinLogo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), \"n\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        placeholder: \"Search using Pin...\",\n        value: pinNumber,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaUserGear, {\n        style: {\n          fontSize: '30px',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ownerPlaylistContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlistHead\",\n          children: [/*#__PURE__*/_jsxDEV(FaRegCirclePlay, {\n            style: {\n              fontSize: '40px',\n              marginTop: '13px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"playlistName\",\n            children: \"\\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8 \\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-cover\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"Playlist Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playlist-description\",\n            children: \"\\uC544\\uC774\\uC720, \\uD0DC\\uC5F0, \\uBCFC\\uBE68\\uAC04\\uC0AC\\uCD98\\uAE30, \\uBC31\\uC608\\uB9B0, \\uC57D\\uB3D9\\uBB34\\uC9C0\\uAC1C, \\uC724\\uD558 ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ChangeBtn\",\n          children: isProfileEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: profileName,\n              onChange: e => setProfileName(e.target.value),\n              placeholder: \"\\uD504\\uB85C\\uD544 \\uC774\\uB984 \\uC785\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: handleProfileSave,\n                children: \"\\uC800\\uC7A5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: handleProfileCancel,\n                children: \"\\uCDE8\\uC18C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: toggleProfileEdit,\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-columns\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"songs-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"check\",\n                  type: \"checkbox\",\n                  onChange: handleSelectAll,\n                  checked: selectedSongs.length === songs.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC544\\uD2F0\\uC2A4\\uD2B8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC88B\\uC544\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: songs.map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedSongs.includes(song.id),\n                  onChange: () => handleSongSelection(song.id),\n                  disabled: !isEditing\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: song.artist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u2661\", song.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, song.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-edit\",\n        children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: handleSave,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: handleCancel,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: toggleEdit,\n          children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uD3B8\\uC9D1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(OwnerPlaylist, \"nH2GpaKQ0l0xuEtlmFLF7y5YSYM=\");\n_c = OwnerPlaylist;\nexport default OwnerPlaylist;\nvar _c;\n$RefreshReg$(_c, \"OwnerPlaylist\");","map":{"version":3,"names":["React","useEffect","useState","api","Pin","FaUserGear","FaRegCirclePlay","jsxDEV","_jsxDEV","Fragment","_Fragment","OwnerPlaylist","_s","pinNumber","setPinNumber","selectedSongs","setSelectedSongs","isEditing","setIsEditing","isProfileEditing","setIsProfileEditing","profileName","setProfileName","playlist","setPlaylist","title","id","isEditable","editedTitle","setEditedTitle","songs","artist","likes","get","then","response","fetchedPlaylist","data","catch","error","console","updatePlaylistTitle","put","prev","log","toggleEditability","patch","handleInputChange","e","target","value","handleKeyDown","key","handleSongSelection","includes","filter","songId","handleSelectAll","length","map","song","toggleEdit","handleSave","handleCancel","toggleProfileEdit","handleProfileSave","handleProfileCancel","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","style","fontSize","cursor","marginTop","onClick","checked","disabled","_c","$RefreshReg$"],"sources":["/Users/sani/Desktop/Heckaton/frontend/src/components/OwnerPage/OwnerPlaylist.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './OwnerPlaylist.css'; \nimport './Owner.css';\nimport api from '../../api/api';\nimport Pin from '../../asset/pin1.png';\nimport { FaUserGear, FaRegCirclePlay } from \"react-icons/fa6\";\n\nfunction OwnerPlaylist() {\n  const [pinNumber, setPinNumber] = useState('');\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isProfileEditing, setIsProfileEditing] = useState(false);\n  const [profileName, setProfileName] = useState('사용자 이름');\n  const [playlist, setPlaylist] = useState({ title: '', id: '', isEditable: false }); \n  const [editedTitle, setEditedTitle] = useState('');\n\n  const songs = [\n    { id: 1, title: '아 진짜 너무 졸리다', artist: '이지은 망명', likes: 1500 },\n    { id: 2, title: '피곤해용 힘들어요', artist: '이지은 영혼', likes: 2 },\n    { id: 3, title: '리액트 못하겠어요', artist: '박은산 영혼', likes: 20000 },\n    // ... 추가 노래 데이터\n  ];\n\n  // 플레이리스트 데이터를 API로부터 가져오는 함수\n  useEffect(() => {\n    api.get('/api/playlists')\n      .then(response => {\n        const fetchedPlaylist = response.data[0]; // 첫 번째 플레이리스트를 가져온다고 가정\n        setPlaylist({\n          title: fetchedPlaylist.title,\n          id: fetchedPlaylist.id,\n          isEditable: fetchedPlaylist.isEditable,\n        });\n        setEditedTitle(fetchedPlaylist.title);\n      })\n      .catch(error => {\n        console.error('플레이리스트 로드 중 오류:', error);\n      });\n  }, []);\n\n  // 플레이리스트 제목을 업데이트하는 함수\n  const updatePlaylistTitle = () => {\n    api.put(`/api/playlists/youtube/${playlist.id}`, { title: editedTitle })\n      .then(response => {\n        setIsEditing(false);\n        setPlaylist((prev) => ({ ...prev, title: editedTitle }));\n        console.log('플레이리스트 업데이트 완료:', response.data);\n      })\n      .catch(error => {\n        console.error('플레이리스트 제목 업데이트 중 오류 발생:', error);\n      });\n  };\n\n  // 플레이리스트의 수정 가능 여부를 변경하는 함수\n  const toggleEditability = () => {\n    api.patch(`/api/playlists/modify/${playlist.id}`, { isEditable: !playlist.isEditable })\n      .then(response => {\n        setPlaylist((prev) => ({ ...prev, isEditable: !prev.isEditable }));\n        console.log('플레이리스트 수정 가능 상태 변경:', response.data);\n      })\n      .catch(error => {\n        console.error('수정 가능 상태 변경 중 오류 발생:', error);\n      });\n  };\n\n  const handleInputChange = (e) => {\n    setPinNumber(e.target.value);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      console.log(`Searching for Pin: ${pinNumber}`);\n    }\n  };\n\n  const handleSongSelection = (id) => {\n    if (selectedSongs.includes(id)) {\n      setSelectedSongs(selectedSongs.filter(songId => songId !== id));\n    } else {\n      setSelectedSongs([...selectedSongs, id]);\n    }\n  };\n\n  const handleSelectAll = () => {\n    if (selectedSongs.length === songs.length) {\n      setSelectedSongs([]);\n    } else {\n      setSelectedSongs(songs.map(song => song.id));\n    }\n  };\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleSave = () => {\n    updatePlaylistTitle();\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setEditedTitle(playlist.title);\n  };\n\n  const toggleProfileEdit = () => {\n    setIsProfileEditing(!isProfileEditing);\n  };\n\n  const handleProfileSave = () => {\n    console.log('Saved profile name:', profileName);\n    toggleProfileEdit();\n  };\n\n  const handleProfileCancel = () => {\n    setProfileName('사용자 이름');\n    toggleProfileEdit();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header-container\">\n        <h1 className=\"logo\">\n          SoundP<span className=\"pinLogoContainer\"><img className=\"pinLogo\" src={Pin} alt=\"pinLogo\" /></span>n\n        </h1>\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          placeholder=\"Search using Pin...\"\n          value={pinNumber}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        />\n        <FaUserGear style={{ fontSize: '30px', cursor: 'pointer' }} />\n      </div>\n\n      <div className=\"ownerPlaylistContainer\">\n        <div className=\"playlistTitle\">\n          <div className='playlistHead'>\n            <FaRegCirclePlay style={{ fontSize: '40px', marginTop: '13px' }} />\n            <h1 className=\"playlistName\">플레이리스트 이름</h1> {/* {playlist.title} */}\n          </div>\n\n          <div className=\"playlist-cover\">\n            <img src=\"https://via.placeholder.com/150\" alt=\"Playlist Cover\" />\n            <div className=\"playlist-description\">\n              아이유, 태연, 볼빨간사춘기, 백예린, 약동무지개, 윤하 ...\n            </div>\n          </div>\n\n          <div className=\"ChangeBtn\">\n          {isProfileEditing ? (\n            <>\n              <input\n                type=\"text\"\n                value={profileName}\n                onChange={(e) => setProfileName(e.target.value)}\n                placeholder=\"프로필 이름 입력\"\n              />\n              <div className='row'>\n                <button className=\"edit-button\" onClick={handleProfileSave}>저장</button>\n                <button className=\"edit-button\" onClick={handleProfileCancel}>취소</button>\n              </div>\n            </>\n          ) : (\n            <button className=\"edit-button\" onClick={toggleProfileEdit}>수정하기</button>\n          )}\n          </div>\n        </div>\n\n        <div className=\"song-columns\">\n        <table className=\"songs-table\">\n          <thead>\n            <tr>\n              <th>\n                <input\n                  className=\"check\"\n                  type=\"checkbox\"\n                  onChange={handleSelectAll}\n                  checked={selectedSongs.length === songs.length}\n                />\n              </th>\n              <th>재생목록</th>\n              <th>아티스트</th>\n              <th>좋아요</th>\n            </tr>\n          </thead>\n          <tbody>\n            {songs.map((song) => (\n              <tr key={song.id}>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedSongs.includes(song.id)}\n                    onChange={() => handleSongSelection(song.id)}\n                    disabled={!isEditing}\n                  />\n                </td>\n                <td>{song.title}</td>\n                <td>{song.artist}</td>\n                <td>♡{song.likes}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        </div>\n\n        <div className=\"profile-edit\">\n          {isEditing ? (\n            <div className='row'>\n              <button className=\"edit-button\" onClick={handleSave}>저장</button>\n              <button className=\"edit-button\" onClick={handleCancel}>취소</button>\n            </div>\n          ) : (\n            <button className=\"edit-button\" onClick={toggleEdit}>\n              재생목록 편집\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OwnerPlaylist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}