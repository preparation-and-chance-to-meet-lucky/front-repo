{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: `${process.env.REACT_APP_SERVER_URL}`,\n  withCredentials: true //쿠키를 자동으로 포함\n});\n\n// 요청 인터셉터를 추가하여 모든 요청에 Authorization 헤더를 추가\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_SERVER_URL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["/Users/sani/Desktop/Heckaton/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: `${process.env.REACT_APP_SERVER_URL}`,\n    withCredentials: true,//쿠키를 자동으로 포함\n});\n\n// 요청 인터셉터를 추가하여 모든 요청에 Authorization 헤더를 추가\napi.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n}, error => {\n    return Promise.reject(error);\n})\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,EAAE;EAC9CC,eAAe,EAAE,IAAI,CAAC;AAC1B,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EAAEM,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}